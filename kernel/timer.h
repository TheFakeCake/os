//////////////////////////////////////////////////////////////////////////////////////////
/// \file timer.h
/// \author Benjamin Ganty
/// \author Gérôme Pasquier
/// \date 24 november 2015
/// \brief Declaration of the timer functions.
//////////////////////////////////////////////////////////////////////////////////////////

#ifndef _TIMER_H_
#define _TIMER_H_

#include "../common/types.h"

//////////////////////////////////////////////////////////////////////////////////////////
/// \fn void timer_init(uint32_t freq_hz)
/// \brief Initializes the timer.
///
/// Initializes the timer and sets its tick frequency.
///
/// \param freq_hz : Ticks frequency [Hz].
//////////////////////////////////////////////////////////////////////////////////////////
extern void timer_init(uint32_t freq_hz);

//////////////////////////////////////////////////////////////////////////////////////////
/// \fn void timer_handler()
/// \brief Timer interruption routine.
///
/// This function is called when a timer interuption occurs. It increment the ticks
/// counter.
//////////////////////////////////////////////////////////////////////////////////////////
extern void timer_handler();

//////////////////////////////////////////////////////////////////////////////////////////
/// \fn uint32_t get_ticks()
/// \brief Returns the number of ticks.
///
/// Returns the number of ticks that occured since the timer was initialized.
///
/// \return Number of ticks.
//////////////////////////////////////////////////////////////////////////////////////////
extern uint32_t get_ticks();

//////////////////////////////////////////////////////////////////////////////////////////
/// \fn void sleep(uint32_t ms)
/// \brief Waits a certain ammount of mulliseconds (active waiting).
/// \param ms : Duration of the sleep in milliseconds.
//////////////////////////////////////////////////////////////////////////////////////////
extern void sleep(uint32_t ms);

#endif

